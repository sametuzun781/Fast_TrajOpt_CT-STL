
/*
Auto-generated by CVXPYgen on July 19, 2025 at 17:32:05.
Content: Declarations for Python binding with pybind11.
*/

// User-defined parameters
struct CPG_Params_cpp_t {
    double w_tr;
    double f_dt_last;
    std::array<double, 156> gf_dt_last;
    double f_ct_last;
    std::array<double, 143> A_ct_last;
    std::array<double, 44> B_ct_last;
    std::array<double, 44> C_ct_last;
    std::array<double, 11> S_ct_last;
    std::array<double, 156> X_last;
    std::array<double, 143> f_bar;
    std::array<double, 1859> A_bar;
    std::array<double, 572> B_bar;
    std::array<double, 572> C_bar;
    std::array<double, 143> S_bar;
    std::array<double, 48> U_last;
    std::array<double, 11> S_last;
};

// Flags for updated user-defined parameters
struct CPG_Updated_cpp_t {
    bool w_tr;
    bool f_dt_last;
    bool gf_dt_last;
    bool f_ct_last;
    bool A_ct_last;
    bool B_ct_last;
    bool C_ct_last;
    bool S_ct_last;
    bool X_last;
    bool f_bar;
    bool A_bar;
    bool B_bar;
    bool C_bar;
    bool S_bar;
    bool U_last;
    bool S_last;
};

// Primal solution
struct CPG_Prim_cpp_t {
    std::array<double, 156> dx;
    std::array<double, 48> du;
    std::array<double, 11> ds;
    std::array<double, 143> nu;
    std::array<double, 11> S;
    std::array<double, 156> X;
    std::array<double, 48> U;
};

// Dual solution
struct CPG_Dual_cpp_t {
    std::array<double, 13> d0;
    std::array<double, 13> d1;
    std::array<double, 13> d2;
    std::array<double, 13> d3;
    std::array<double, 13> d4;
    std::array<double, 13> d5;
    std::array<double, 13> d6;
    std::array<double, 13> d7;
    std::array<double, 13> d8;
    std::array<double, 13> d9;
    std::array<double, 13> d10;
    std::array<double, 156> d11;
    std::array<double, 48> d12;
    std::array<double, 11> d13;
    std::array<double, 11> d14;
    double d15;
    std::array<double, 11> d16;
    std::array<double, 8> d17;
    std::array<double, 8> d18;
    std::array<double, 3> d19;
    std::array<double, 3> d20;
    std::array<double, 4> d21;
    std::array<double, 4> d22;
    std::array<double, 12> d23;
    std::array<double, 12> d24;
    std::array<double, 36> d25;
};

// Solver information
struct CPG_Info_cpp_t {
    double obj_val;
    int iter;
    int status;
    double pri_res;
    double dua_res;
    double time;
};

// Solution and solver information
struct CPG_Result_cpp_t {
    CPG_Prim_cpp_t prim;
    CPG_Dual_cpp_t dual;
    CPG_Info_cpp_t info;
};

// Main solve function
CPG_Result_cpp_t solve_cpp(struct CPG_Updated_cpp_t& CPG_Updated_cpp, struct CPG_Params_cpp_t& CPG_Params_cpp);
